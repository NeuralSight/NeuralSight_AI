# config file version
apiVersion: 1
# list of datasources that should be deleted from the database
deleteDatasources:
  - name: Prometheus
    orgId: 1
# list of datasources to insert/update depending
# whats available in the database
datasources:
  # <string, required> name of the datasource. Required
  - name: Prometheus
    # <string, required> datasource type. Required
    type: prometheus
    # <string, required> access mode. direct or proxy. Required
    access: proxy
    # <int> org id. will default to orgId 1 if not specified
    orgId: 1
    # <string> url
    url: http://prometheus:9090
    # <string> database password, if used
    password:
    # <string> database user, if used
    user:
    # <string> database name, if used
    database:
    # <bool> enable/disable basic auth
    basicAuth: false
    # <string> basic auth username, if used
    basicAuthUser:
    # <string> basic auth password, if used
    basicAuthPassword:
    # <bool> enable/disable with credentials headers
    withCredentials:
    # <bool> mark as default datasource. Max one per org
    isDefault: true
    # <map> fields that will be converted to json and stored in json_data
    jsonData:
      graphiteVersion: "1.1"
      tlsAuth: false
      tlsAuthWithCACert: false
    # <string> json object of data that will be encrypted.
    secureJsonData:
      tlsCACert: "..."
      tlsClientCert: "..."
      tlsClientKey: "..."
    version: 1
    # <bool> allow users to edit datasources from the UI.
    editable: true








# server{
#     listen 80;
#     server_name 3.231.228.186 ec2-34-204-198-118.compute-1.amazonaws.com backend.neuralsight.ai;
#     if ($host = backend.neuralsight.ai) {
#         return 301 https://$host$request_uri;
#     }
#     return 404;
# }
# server{
#         #redirect http to https
#         listen 80;
#         server_name backend.neuralsight.ai www.backend.neuralsight.ai;
#         if ($host =  $request_uri) {
#                 return 301 https://backend.neuralsight.ai;
# }
#         return 301 https://backend.neuralsight.ai$request_uri;
# }
# server{
#        listen 80;
#        server_name 3.231.228.186 ec2-34-204-198-118.compute-1.amazonaws.com backend.neuralsight.ai;
#        location / {
#                 proxy_pass http://0.0.0.0:8000;
#                 proxy_set_header Host $http_host;
#                 proxy_set_header X-Real-IP $remote_addr;
#                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                 proxy_set_header X-Forwarded-Proto $scheme;
#
#        }
#     listen 443 ssl;
#     ssl_certificate /etc/letsencrypt/live/backend.neuralsight.ai/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/backend.neuralsight.ai/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
# }




server {
    listen 80;
    server_name backend.neuralsight.ai;
    location / {
      proxy_pass http://127.0.0.1:8000;
    }
  }
  server {
    listen 80;
    server_name  ec2-34-204-198-118.compute-1.amazonaws.com;
    location / {
      proxy_pass http://127.0.0.1:3000;
    }
  }
